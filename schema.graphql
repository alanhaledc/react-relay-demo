type Message {
  id: String
  title: String
  content: String
}

type MessageInput {
  userId: String
  id: String
}

type MessagePayload {
  userId: String
  message: Message
}

type UserInput {
  userId: String
}

type UserPayload {
  userId: String
  messages: [message]
}

type Query {
  messages(input: messagesInput): messagesPayload
  message(input: messageInput): messagePayload
}

type Mutation {
  addMessage(input: AddMessageInput): AddMessagePayload
  updateMessage(input: UpdateMessageInput): UpdateMessagePayload
  removeMessage(input: RemoveMessageInput): RemoveMessagePayload
}

type AddMessageInput {
  userId: String
  title: String
  content: String
}

type AddMessagePayload {
  user: User
  message: Message
}

type UpdateMessageInput {
  userId: String
  id: String
  title: String
  content: String
}

type UpdateMessagePayload {
  user: User
  message: Message
}

type RemoveMessageInput {
  userId: String
  id: String
}

type RemoveMessagePayload {
  user: User
  message: Message
}
